{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { toast } from 'react-toastify';\nexport const createForum = createAsyncThunk('forum/create', async (formData, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await fetch('http://localhost:8080/api/v1/forums', {\n      method: 'POST',\n      headers: {\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\n      },\n      body: formData\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.message || 'Failed to create forum');\n    }\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    return rejectWithValue(error.message);\n  }\n});\nconst forumSlice = createSlice({\n  name: 'forum',\n  initialState: {\n    formData: {\n      title: '',\n      description: '',\n      selectedCategories: [],\n      coverImage: null\n    },\n    previewImage: null,\n    errors: {},\n    isSubmitting: false,\n    showPreview: false\n  },\n  reducers: {\n    setFormData: (state, action) => {\n      state.formData = {\n        ...state.formData,\n        ...action.payload\n      };\n    },\n    setPreviewImage: (state, action) => {\n      state.previewImage = action.payload;\n    },\n    setErrors: (state, action) => {\n      state.errors = action.payload;\n    },\n    setShowPreview: (state, action) => {\n      state.showPreview = action.payload;\n    },\n    resetForm: state => {\n      state.formData = {\n        title: '',\n        description: '',\n        selectedCategories: [],\n        coverImage: null\n      };\n      state.previewImage = null;\n      state.errors = {};\n      state.showPreview = false;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(createForum.pending, state => {\n      state.isSubmitting = true;\n    }).addCase(createForum.fulfilled, (state, action) => {\n      state.isSubmitting = false;\n      toast.success(action.payload.message);\n    }).addCase(createForum.rejected, (state, action) => {\n      state.isSubmitting = false;\n      toast.error(action.payload || 'An error occurred while creating the forum');\n    });\n  }\n});\nexport const {\n  setFormData,\n  setPreviewImage,\n  setErrors,\n  setShowPreview,\n  resetForm\n} = forumSlice.actions;\nexport default forumSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","toast","createForum","formData","rejectWithValue","response","fetch","method","headers","localStorage","getItem","body","ok","errorData","json","Error","message","result","error","forumSlice","name","initialState","title","description","selectedCategories","coverImage","previewImage","errors","isSubmitting","showPreview","reducers","setFormData","state","action","payload","setPreviewImage","setErrors","setShowPreview","resetForm","extraReducers","builder","addCase","pending","fulfilled","success","rejected","actions","reducer"],"sources":["C:/Users/TTC/OneDrive/Documents/GITHUB/fe-readhub/src/pages/create_forum/redux/slices/forumSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport const createForum = createAsyncThunk(\r\n  'forum/create',\r\n  async (formData, { rejectWithValue }) => {\r\n    try {\r\n      const response = await fetch('http://localhost:8080/api/v1/forums', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n        },\r\n        body: formData,\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.message || 'Failed to create forum');\r\n      }\r\n\r\n      const result = await response.json();\r\n      return result;\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  }\r\n);\r\n\r\nconst forumSlice = createSlice({\r\n  name: 'forum',\r\n  initialState: {\r\n    formData: {\r\n      title: '',\r\n      description: '',\r\n      selectedCategories: [],\r\n      coverImage: null,\r\n    },\r\n    previewImage: null,\r\n    errors: {},\r\n    isSubmitting: false,\r\n    showPreview: false,\r\n  },\r\n  reducers: {\r\n    setFormData: (state, action) => {\r\n      state.formData = { ...state.formData, ...action.payload };\r\n    },\r\n    setPreviewImage: (state, action) => {\r\n      state.previewImage = action.payload;\r\n    },\r\n    setErrors: (state, action) => {\r\n      state.errors = action.payload;\r\n    },\r\n    setShowPreview: (state, action) => {\r\n      state.showPreview = action.payload;\r\n    },\r\n    resetForm: (state) => {\r\n      state.formData = {\r\n        title: '',\r\n        description: '',\r\n        selectedCategories: [],\r\n        coverImage: null,\r\n      };\r\n      state.previewImage = null;\r\n      state.errors = {};\r\n      state.showPreview = false;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(createForum.pending, (state) => {\r\n        state.isSubmitting = true;\r\n      })\r\n      .addCase(createForum.fulfilled, (state, action) => {\r\n        state.isSubmitting = false;\r\n        toast.success(action.payload.message);\r\n      })\r\n      .addCase(createForum.rejected, (state, action) => {\r\n        state.isSubmitting = false;\r\n        toast.error(action.payload || 'An error occurred while creating the forum');\r\n      });\r\n  },\r\n});\r\n\r\nexport const {\r\n  setFormData,\r\n  setPreviewImage,\r\n  setErrors,\r\n  setShowPreview,\r\n  resetForm,\r\n} = forumSlice.actions;\r\n\r\nexport default forumSlice.reducer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}