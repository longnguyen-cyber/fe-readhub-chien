{"ast":null,"code":"import { isValidEmail, isValidPassword } from '../../../utils/Validatations';\nexport const initialState = {\n  username: '',\n  email: '',\n  password: '',\n  confirmPassword: '',\n  usernameError: '',\n  emailError: '',\n  passwordError: '',\n  confirmPasswordError: '',\n  isShowPassword: false,\n  isShowConfirmPassword: false,\n  isFocused1: false,\n  isFocused2: false,\n  isFocused3: false,\n  isFocused4: false,\n  buttonDisabled: true,\n  otp: '',\n  otpError: '',\n  countdown: 60,\n  loading: false,\n  success: false\n};\nexport const actionTypes = {\n  SET_FIELD: 'SET_FIELD',\n  SET_ERROR: 'SET_ERROR',\n  TOGGLE_PASSWORD: 'TOGGLE_PASSWORD',\n  TOGGLE_CONFIRM_PASSWORD: 'TOGGLE_CONFIRM_PASSWORD',\n  SET_FOCUS: 'SET_FOCUS',\n  SET_BUTTON_DISABLED: 'SET_BUTTON_DISABLED',\n  SET_OTP: 'SET_OTP',\n  SET_OTP_ERROR: 'SET_OTP_ERROR',\n  SET_COUNTDOWN: 'SET_COUNTDOWN',\n  SET_LOADING: 'SET_LOADING',\n  SET_SUCCESS: 'SET_SUCCESS'\n};\nexport const registerReducer = (state, action) => {\n  switch (action.type) {\n    case actionTypes.SET_FIELD:\n      return {\n        ...state,\n        [action.field]: action.value\n      };\n    case actionTypes.SET_ERROR:\n      return {\n        ...state,\n        [action.field]: action.error\n      };\n    case actionTypes.TOGGLE_PASSWORD:\n      return {\n        ...state,\n        isShowPassword: !state.isShowPassword\n      };\n    case actionTypes.TOGGLE_CONFIRM_PASSWORD:\n      return {\n        ...state,\n        isShowConfirmPassword: !state.isShowConfirmPassword\n      };\n    case actionTypes.SET_FOCUS:\n      return {\n        ...state,\n        [action.field]: action.value\n      };\n    case actionTypes.SET_BUTTON_DISABLED:\n      return {\n        ...state,\n        buttonDisabled: action.value\n      };\n    case actionTypes.SET_OTP:\n      return {\n        ...state,\n        otp: action.payload\n      };\n    case actionTypes.SET_OTP_ERROR:\n      return {\n        ...state,\n        otpError: action.payload\n      };\n    case actionTypes.SET_COUNTDOWN:\n      return {\n        ...state,\n        countdown: action.payload\n      };\n    case actionTypes.SET_LOADING:\n      return {\n        ...state,\n        loading: action.payload\n      };\n    case actionTypes.SET_SUCCESS:\n      return {\n        ...state,\n        success: action.payload\n      };\n    default:\n      return state;\n  }\n};\nexport const validateForm = state => {\n  const isValid = isValidEmail(state.email) && isValidPassword(state.password) && state.username.length >= 6 && state.password === state.confirmPassword;\n  return !isValid;\n};\nexport const validateField = (field, value, state) => {\n  let error = '';\n  switch (field) {\n    case 'username':\n      if (value === '') error = 'Username is required';else if (value.length < 6) error = 'Username must be at least 6 characters long';\n      break;\n    case 'email':\n      if (value === '') error = 'Email is required';else if (!isValidEmail(value)) error = 'Invalid email address';\n      break;\n    case 'password':\n      if (value === '') error = 'Password is required';else if (!isValidPassword(value)) error = 'Password must be at least 8 characters long, include a letter, a number, and a special character';\n      break;\n    case 'confirmPassword':\n      if (value === '') error = 'Please confirm your password';else if (value !== state.password) error = 'Passwords do not match';\n      break;\n  }\n  return error;\n};","map":{"version":3,"names":["isValidEmail","isValidPassword","initialState","username","email","password","confirmPassword","usernameError","emailError","passwordError","confirmPasswordError","isShowPassword","isShowConfirmPassword","isFocused1","isFocused2","isFocused3","isFocused4","buttonDisabled","otp","otpError","countdown","loading","success","actionTypes","SET_FIELD","SET_ERROR","TOGGLE_PASSWORD","TOGGLE_CONFIRM_PASSWORD","SET_FOCUS","SET_BUTTON_DISABLED","SET_OTP","SET_OTP_ERROR","SET_COUNTDOWN","SET_LOADING","SET_SUCCESS","registerReducer","state","action","type","field","value","error","payload","validateForm","isValid","length","validateField"],"sources":["C:/Users/TTC/OneDrive/Documents/GITHUB/fe-readhub/src/pages/register/redux/registerReducer.js"],"sourcesContent":["import { isValidEmail, isValidPassword } from '../../../utils/Validatations';\r\n\r\nexport const initialState = {\r\n    username: '',\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n    usernameError: '',\r\n    emailError: '',\r\n    passwordError: '',\r\n    confirmPasswordError: '',\r\n    isShowPassword: false,\r\n    isShowConfirmPassword: false,\r\n    isFocused1: false,\r\n    isFocused2: false,\r\n    isFocused3: false,\r\n    isFocused4: false,\r\n    buttonDisabled: true,\r\n    otp: '',\r\n    otpError: '',\r\n    countdown: 60,\r\n    loading: false,\r\n    success: false,\r\n};\r\n\r\nexport const actionTypes = {\r\n    SET_FIELD: 'SET_FIELD',\r\n    SET_ERROR: 'SET_ERROR',\r\n    TOGGLE_PASSWORD: 'TOGGLE_PASSWORD',\r\n    TOGGLE_CONFIRM_PASSWORD: 'TOGGLE_CONFIRM_PASSWORD',\r\n    SET_FOCUS: 'SET_FOCUS',\r\n    SET_BUTTON_DISABLED: 'SET_BUTTON_DISABLED',\r\n    SET_OTP: 'SET_OTP',\r\n    SET_OTP_ERROR: 'SET_OTP_ERROR',\r\n    SET_COUNTDOWN: 'SET_COUNTDOWN',\r\n    SET_LOADING: 'SET_LOADING',\r\n    SET_SUCCESS: 'SET_SUCCESS',\r\n};\r\n\r\nexport const registerReducer = ( state, action ) => {\r\n    switch ( action.type )\r\n    {\r\n        case actionTypes.SET_FIELD:\r\n            return { ...state, [ action.field ]: action.value };\r\n        case actionTypes.SET_ERROR:\r\n            return { ...state, [ action.field ]: action.error };\r\n        case actionTypes.TOGGLE_PASSWORD:\r\n            return { ...state, isShowPassword: !state.isShowPassword };\r\n        case actionTypes.TOGGLE_CONFIRM_PASSWORD:\r\n            return { ...state, isShowConfirmPassword: !state.isShowConfirmPassword };\r\n        case actionTypes.SET_FOCUS:\r\n            return { ...state, [ action.field ]: action.value };\r\n        case actionTypes.SET_BUTTON_DISABLED:\r\n            return { ...state, buttonDisabled: action.value };\r\n        case actionTypes.SET_OTP:\r\n            return { ...state, otp: action.payload };\r\n        case actionTypes.SET_OTP_ERROR:\r\n            return { ...state, otpError: action.payload };\r\n        case actionTypes.SET_COUNTDOWN:\r\n            return { ...state, countdown: action.payload };\r\n        case actionTypes.SET_LOADING:\r\n            return { ...state, loading: action.payload };\r\n        case actionTypes.SET_SUCCESS:\r\n            return { ...state, success: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const validateForm = ( state ) => {\r\n    const isValid =\r\n        isValidEmail( state.email ) &&\r\n        isValidPassword( state.password ) &&\r\n        state.username.length >= 6 &&\r\n        state.password === state.confirmPassword;\r\n    return !isValid;\r\n};\r\n\r\nexport const validateField = ( field, value, state ) => {\r\n    let error = '';\r\n    switch ( field )\r\n    {\r\n        case 'username':\r\n            if ( value === '' ) error = 'Username is required';\r\n            else if ( value.length < 6 ) error = 'Username must be at least 6 characters long';\r\n            break;\r\n        case 'email':\r\n            if ( value === '' ) error = 'Email is required';\r\n            else if ( !isValidEmail( value ) ) error = 'Invalid email address';\r\n            break;\r\n        case 'password':\r\n            if ( value === '' ) error = 'Password is required';\r\n            else if ( !isValidPassword( value ) ) error = 'Password must be at least 8 characters long, include a letter, a number, and a special character';\r\n            break;\r\n        case 'confirmPassword':\r\n            if ( value === '' ) error = 'Please confirm your password';\r\n            else if ( value !== state.password ) error = 'Passwords do not match';\r\n            break;\r\n    }\r\n    return error;\r\n};"],"mappings":"AAAA,SAASA,YAAY,EAAEC,eAAe,QAAQ,8BAA8B;AAE5E,OAAO,MAAMC,YAAY,GAAG;EACxBC,QAAQ,EAAE,EAAE;EACZC,KAAK,EAAE,EAAE;EACTC,QAAQ,EAAE,EAAE;EACZC,eAAe,EAAE,EAAE;EACnBC,aAAa,EAAE,EAAE;EACjBC,UAAU,EAAE,EAAE;EACdC,aAAa,EAAE,EAAE;EACjBC,oBAAoB,EAAE,EAAE;EACxBC,cAAc,EAAE,KAAK;EACrBC,qBAAqB,EAAE,KAAK;EAC5BC,UAAU,EAAE,KAAK;EACjBC,UAAU,EAAE,KAAK;EACjBC,UAAU,EAAE,KAAK;EACjBC,UAAU,EAAE,KAAK;EACjBC,cAAc,EAAE,IAAI;EACpBC,GAAG,EAAE,EAAE;EACPC,QAAQ,EAAE,EAAE;EACZC,SAAS,EAAE,EAAE;EACbC,OAAO,EAAE,KAAK;EACdC,OAAO,EAAE;AACb,CAAC;AAED,OAAO,MAAMC,WAAW,GAAG;EACvBC,SAAS,EAAE,WAAW;EACtBC,SAAS,EAAE,WAAW;EACtBC,eAAe,EAAE,iBAAiB;EAClCC,uBAAuB,EAAE,yBAAyB;EAClDC,SAAS,EAAE,WAAW;EACtBC,mBAAmB,EAAE,qBAAqB;EAC1CC,OAAO,EAAE,SAAS;EAClBC,aAAa,EAAE,eAAe;EAC9BC,aAAa,EAAE,eAAe;EAC9BC,WAAW,EAAE,aAAa;EAC1BC,WAAW,EAAE;AACjB,CAAC;AAED,OAAO,MAAMC,eAAe,GAAGA,CAAEC,KAAK,EAAEC,MAAM,KAAM;EAChD,QAASA,MAAM,CAACC,IAAI;IAEhB,KAAKf,WAAW,CAACC,SAAS;MACtB,OAAO;QAAE,GAAGY,KAAK;QAAE,CAAEC,MAAM,CAACE,KAAK,GAAIF,MAAM,CAACG;MAAM,CAAC;IACvD,KAAKjB,WAAW,CAACE,SAAS;MACtB,OAAO;QAAE,GAAGW,KAAK;QAAE,CAAEC,MAAM,CAACE,KAAK,GAAIF,MAAM,CAACI;MAAM,CAAC;IACvD,KAAKlB,WAAW,CAACG,eAAe;MAC5B,OAAO;QAAE,GAAGU,KAAK;QAAEzB,cAAc,EAAE,CAACyB,KAAK,CAACzB;MAAe,CAAC;IAC9D,KAAKY,WAAW,CAACI,uBAAuB;MACpC,OAAO;QAAE,GAAGS,KAAK;QAAExB,qBAAqB,EAAE,CAACwB,KAAK,CAACxB;MAAsB,CAAC;IAC5E,KAAKW,WAAW,CAACK,SAAS;MACtB,OAAO;QAAE,GAAGQ,KAAK;QAAE,CAAEC,MAAM,CAACE,KAAK,GAAIF,MAAM,CAACG;MAAM,CAAC;IACvD,KAAKjB,WAAW,CAACM,mBAAmB;MAChC,OAAO;QAAE,GAAGO,KAAK;QAAEnB,cAAc,EAAEoB,MAAM,CAACG;MAAM,CAAC;IACrD,KAAKjB,WAAW,CAACO,OAAO;MACpB,OAAO;QAAE,GAAGM,KAAK;QAAElB,GAAG,EAAEmB,MAAM,CAACK;MAAQ,CAAC;IAC5C,KAAKnB,WAAW,CAACQ,aAAa;MAC1B,OAAO;QAAE,GAAGK,KAAK;QAAEjB,QAAQ,EAAEkB,MAAM,CAACK;MAAQ,CAAC;IACjD,KAAKnB,WAAW,CAACS,aAAa;MAC1B,OAAO;QAAE,GAAGI,KAAK;QAAEhB,SAAS,EAAEiB,MAAM,CAACK;MAAQ,CAAC;IAClD,KAAKnB,WAAW,CAACU,WAAW;MACxB,OAAO;QAAE,GAAGG,KAAK;QAAEf,OAAO,EAAEgB,MAAM,CAACK;MAAQ,CAAC;IAChD,KAAKnB,WAAW,CAACW,WAAW;MACxB,OAAO;QAAE,GAAGE,KAAK;QAAEd,OAAO,EAAEe,MAAM,CAACK;MAAQ,CAAC;IAChD;MACI,OAAON,KAAK;EACpB;AACJ,CAAC;AAED,OAAO,MAAMO,YAAY,GAAKP,KAAK,IAAM;EACrC,MAAMQ,OAAO,GACT5C,YAAY,CAAEoC,KAAK,CAAChC,KAAM,CAAC,IAC3BH,eAAe,CAAEmC,KAAK,CAAC/B,QAAS,CAAC,IACjC+B,KAAK,CAACjC,QAAQ,CAAC0C,MAAM,IAAI,CAAC,IAC1BT,KAAK,CAAC/B,QAAQ,KAAK+B,KAAK,CAAC9B,eAAe;EAC5C,OAAO,CAACsC,OAAO;AACnB,CAAC;AAED,OAAO,MAAME,aAAa,GAAGA,CAAEP,KAAK,EAAEC,KAAK,EAAEJ,KAAK,KAAM;EACpD,IAAIK,KAAK,GAAG,EAAE;EACd,QAASF,KAAK;IAEV,KAAK,UAAU;MACX,IAAKC,KAAK,KAAK,EAAE,EAAGC,KAAK,GAAG,sBAAsB,CAAC,KAC9C,IAAKD,KAAK,CAACK,MAAM,GAAG,CAAC,EAAGJ,KAAK,GAAG,6CAA6C;MAClF;IACJ,KAAK,OAAO;MACR,IAAKD,KAAK,KAAK,EAAE,EAAGC,KAAK,GAAG,mBAAmB,CAAC,KAC3C,IAAK,CAACzC,YAAY,CAAEwC,KAAM,CAAC,EAAGC,KAAK,GAAG,uBAAuB;MAClE;IACJ,KAAK,UAAU;MACX,IAAKD,KAAK,KAAK,EAAE,EAAGC,KAAK,GAAG,sBAAsB,CAAC,KAC9C,IAAK,CAACxC,eAAe,CAAEuC,KAAM,CAAC,EAAGC,KAAK,GAAG,kGAAkG;MAChJ;IACJ,KAAK,iBAAiB;MAClB,IAAKD,KAAK,KAAK,EAAE,EAAGC,KAAK,GAAG,8BAA8B,CAAC,KACtD,IAAKD,KAAK,KAAKJ,KAAK,CAAC/B,QAAQ,EAAGoC,KAAK,GAAG,wBAAwB;MACrE;EACR;EACA,OAAOA,KAAK;AAChB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}