{"ast":null,"code":"import { isValidEmail, isValidPassword } from '../../../utils/Validatations';\nexport const initialState = {\n  username: '',\n  email: '',\n  password: '',\n  confirmPassword: '',\n  usernameError: '',\n  emailError: '',\n  passwordError: '',\n  confirmPasswordError: '',\n  isShowPassword: false,\n  isShowConfirmPassword: false,\n  isFocused1: false,\n  isFocused2: false,\n  isFocused3: false,\n  isFocused4: false,\n  buttonDisabled: true,\n  otp: '',\n  otpError: '',\n  countdown: 60,\n  loading: false,\n  success: false\n};\nexport const actionTypes = {\n  SET_FIELD: 'SET_FIELD',\n  SET_ERROR: 'SET_ERROR',\n  TOGGLE_PASSWORD: 'TOGGLE_PASSWORD',\n  TOGGLE_CONFIRM_PASSWORD: 'TOGGLE_CONFIRM_PASSWORD',\n  SET_FOCUS: 'SET_FOCUS',\n  SET_BUTTON_DISABLED: 'SET_BUTTON_DISABLED',\n  SET_OTP: 'SET_OTP',\n  SET_OTP_ERROR: 'SET_OTP_ERROR',\n  SET_COUNTDOWN: 'SET_COUNTDOWN',\n  SET_LOADING: 'SET_LOADING',\n  SET_SUCCESS: 'SET_SUCCESS'\n};\nexport const registerReducer = (state, action) => {\n  switch (action.type) {\n    case actionTypes.SET_FIELD:\n      return {\n        ...state,\n        [action.field]: action.value\n      };\n    case actionTypes.SET_ERROR:\n      return {\n        ...state,\n        [action.field]: action.error\n      };\n    case actionTypes.TOGGLE_PASSWORD:\n      return {\n        ...state,\n        isShowPassword: !state.isShowPassword\n      };\n    case actionTypes.TOGGLE_CONFIRM_PASSWORD:\n      return {\n        ...state,\n        isShowConfirmPassword: !state.isShowConfirmPassword\n      };\n    case actionTypes.SET_FOCUS:\n      return {\n        ...state,\n        [action.field]: action.value\n      };\n    case actionTypes.SET_BUTTON_DISABLED:\n      return {\n        ...state,\n        buttonDisabled: action.value\n      };\n    case actionTypes.SET_OTP:\n      return {\n        ...state,\n        otp: action.payload\n      };\n    case actionTypes.SET_OTP_ERROR:\n      return {\n        ...state,\n        otpError: action.payload\n      };\n    case actionTypes.SET_COUNTDOWN:\n      return {\n        ...state,\n        countdown: action.payload\n      };\n    case actionTypes.SET_LOADING:\n      return {\n        ...state,\n        loading: action.payload\n      };\n    case actionTypes.SET_SUCCESS:\n      return {\n        ...state,\n        success: action.payload\n      };\n    default:\n      return state;\n  }\n};\nexport const validateForm = state => {\n  const isValid = isValidEmail(state.email) && isValidPassword(state.password) && state.username.length >= 6 && state.password === state.confirmPassword;\n  return !isValid;\n};\nexport const validateField = (field, value, state) => {\n  let error = '';\n  switch (field) {\n    case 'username':\n      if (value === '') error = 'Username is required';else if (value.length < 6) error = 'Username must be at least 6 characters long';\n      break;\n    case 'email':\n      if (value === '') error = 'Email is required';else if (!isValidEmail(value)) error = 'Invalid email address';\n      break;\n    case 'password':\n      if (value === '') error = 'Password is required';else if (!isValidPassword(value)) error = 'Password must be at least 8 characters long, include a letter, a number, and a special character';\n      break;\n    case 'confirmPassword':\n      if (value === '') error = 'Please confirm your password';else if (value !== state.password) error = 'Passwords do not match';\n      break;\n  }\n  return error;\n};","map":{"version":3,"names":["isValidEmail","isValidPassword","initialState","username","email","password","confirmPassword","usernameError","emailError","passwordError","confirmPasswordError","isShowPassword","isShowConfirmPassword","isFocused1","isFocused2","isFocused3","isFocused4","buttonDisabled","otp","otpError","countdown","loading","success","actionTypes","SET_FIELD","SET_ERROR","TOGGLE_PASSWORD","TOGGLE_CONFIRM_PASSWORD","SET_FOCUS","SET_BUTTON_DISABLED","SET_OTP","SET_OTP_ERROR","SET_COUNTDOWN","SET_LOADING","SET_SUCCESS","registerReducer","state","action","type","field","value","error","payload","validateForm","isValid","length","validateField"],"sources":["C:/Users/TTC/OneDrive/Documents/GITHUB/fe-readhub/src/pages/register/redux/registerReducer.js"],"sourcesContent":["import {isValidEmail, isValidPassword} from '../../../utils/Validatations'\r\n\r\nexport const initialState = {\r\n  username: '',\r\n  email: '',\r\n  password: '',\r\n  confirmPassword: '',\r\n  usernameError: '',\r\n  emailError: '',\r\n  passwordError: '',\r\n  confirmPasswordError: '',\r\n  isShowPassword: false,\r\n  isShowConfirmPassword: false,\r\n  isFocused1: false,\r\n  isFocused2: false,\r\n  isFocused3: false,\r\n  isFocused4: false,\r\n  buttonDisabled: true,\r\n  otp: '',\r\n  otpError: '',\r\n  countdown: 60,\r\n  loading: false,\r\n  success: false,\r\n}\r\n\r\nexport const actionTypes = {\r\n  SET_FIELD: 'SET_FIELD',\r\n  SET_ERROR: 'SET_ERROR',\r\n  TOGGLE_PASSWORD: 'TOGGLE_PASSWORD',\r\n  TOGGLE_CONFIRM_PASSWORD: 'TOGGLE_CONFIRM_PASSWORD',\r\n  SET_FOCUS: 'SET_FOCUS',\r\n  SET_BUTTON_DISABLED: 'SET_BUTTON_DISABLED',\r\n  SET_OTP: 'SET_OTP',\r\n  SET_OTP_ERROR: 'SET_OTP_ERROR',\r\n  SET_COUNTDOWN: 'SET_COUNTDOWN',\r\n  SET_LOADING: 'SET_LOADING',\r\n  SET_SUCCESS: 'SET_SUCCESS',\r\n}\r\n\r\nexport const registerReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.SET_FIELD:\r\n      return {...state, [action.field]: action.value}\r\n    case actionTypes.SET_ERROR:\r\n      return {...state, [action.field]: action.error}\r\n    case actionTypes.TOGGLE_PASSWORD:\r\n      return {...state, isShowPassword: !state.isShowPassword}\r\n    case actionTypes.TOGGLE_CONFIRM_PASSWORD:\r\n      return {...state, isShowConfirmPassword: !state.isShowConfirmPassword}\r\n    case actionTypes.SET_FOCUS:\r\n      return {...state, [action.field]: action.value}\r\n    case actionTypes.SET_BUTTON_DISABLED:\r\n      return {...state, buttonDisabled: action.value}\r\n    case actionTypes.SET_OTP:\r\n      return {...state, otp: action.payload}\r\n    case actionTypes.SET_OTP_ERROR:\r\n      return {...state, otpError: action.payload}\r\n    case actionTypes.SET_COUNTDOWN:\r\n      return {...state, countdown: action.payload}\r\n    case actionTypes.SET_LOADING:\r\n      return {...state, loading: action.payload}\r\n    case actionTypes.SET_SUCCESS:\r\n      return {...state, success: action.payload}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const validateForm = state => {\r\n  const isValid =\r\n    isValidEmail(state.email) &&\r\n    isValidPassword(state.password) &&\r\n    state.username.length >= 6 &&\r\n    state.password === state.confirmPassword\r\n  return !isValid\r\n}\r\n\r\nexport const validateField = (field, value, state) => {\r\n  let error = ''\r\n  switch (field) {\r\n    case 'username':\r\n      if (value === '') error = 'Username is required'\r\n      else if (value.length < 6)\r\n        error = 'Username must be at least 6 characters long'\r\n      break\r\n    case 'email':\r\n      if (value === '') error = 'Email is required'\r\n      else if (!isValidEmail(value)) error = 'Invalid email address'\r\n      break\r\n    case 'password':\r\n      if (value === '') error = 'Password is required'\r\n      else if (!isValidPassword(value))\r\n        error =\r\n          'Password must be at least 8 characters long, include a letter, a number, and a special character'\r\n      break\r\n    case 'confirmPassword':\r\n      if (value === '') error = 'Please confirm your password'\r\n      else if (value !== state.password) error = 'Passwords do not match'\r\n      break\r\n  }\r\n  return error\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}