{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { getToken } from 'firebase/messaging';\nimport { messaging } from '../config/firebase';\nconst useFCM = () => {\n  _s();\n  useEffect(() => {\n    const initializeNotifications = async () => {\n      try {\n        setLoading(true);\n        const permission = await Notification.requestPermission();\n        if (permission === 'granted') {\n          // Get FCM token\n          const token = await getToken(messaging, {\n            vapidKey: process.env.REACT_APP_FIREBASE_VAPID_KEY\n          });\n          if (token) {\n            await fetch(`${process.env.REACT_APP_API_BASE_URL}/notifications/register-device`, {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\n              },\n              body: JSON.stringify({\n                fcmToken: token\n              })\n            });\n            console.log('FCM token:', token);\n          }\n\n          // Listen for foreground messages\n          const unsubscribe = onMessage(messaging, payload => {\n            var _payload$data, _payload$data2;\n            console.log('Received foreground message:', payload);\n            const newNotification = {\n              id: Date.now().toString(),\n              title: payload.notification.title,\n              message: payload.notification.body,\n              type: ((_payload$data = payload.data) === null || _payload$data === void 0 ? void 0 : _payload$data.type) || 'DEFAULT',\n              data: JSON.parse(((_payload$data2 = payload.data) === null || _payload$data2 === void 0 ? void 0 : _payload$data2.extraData) || '{}'),\n              createdAt: new Date().toISOString(),\n              read: false\n            };\n            setNotifications(prev => [newNotification, ...prev]);\n            setUnreadCount(prev => prev + 1);\n          });\n          return () => {\n            unsubscribe();\n          };\n        }\n      } catch (error) {\n        console.error('Error initializing notifications:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    initializeNotifications();\n  }, []);\n};\n_s(useFCM, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\nexport default useFCM;","map":{"version":3,"names":["useEffect","useState","getToken","messaging","useFCM","_s","initializeNotifications","setLoading","permission","Notification","requestPermission","token","vapidKey","process","env","REACT_APP_FIREBASE_VAPID_KEY","fetch","REACT_APP_API_BASE_URL","method","headers","localStorage","getItem","body","JSON","stringify","fcmToken","console","log","unsubscribe","onMessage","payload","_payload$data","_payload$data2","newNotification","id","Date","now","toString","title","notification","message","type","data","parse","extraData","createdAt","toISOString","read","setNotifications","prev","setUnreadCount","error"],"sources":["C:/Users/TTC/OneDrive/Documents/GITHUB/fe-readhub/src/hooks/useFCM.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { getToken } from 'firebase/messaging';\r\nimport { messaging } from '../config/firebase';\r\n\r\nconst useFCM = () => {\r\n\r\n  useEffect(() => {\r\n    const initializeNotifications = async () => {\r\n      try {\r\n        setLoading(true);\r\n\r\n        const permission = await Notification.requestPermission();\r\n        if (permission === 'granted') {\r\n          // Get FCM token\r\n          const token = await getToken(messaging, {\r\n            vapidKey: process.env.REACT_APP_FIREBASE_VAPID_KEY\r\n          });\r\n\r\n          if (token) {\r\n\r\n            await fetch(`${process.env.REACT_APP_API_BASE_URL}/notifications/register-device`, {\r\n              method: 'POST',\r\n              headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n              },\r\n              body: JSON.stringify({ fcmToken: token })\r\n            });\r\n            console.log('FCM token:', token);\r\n          }\r\n\r\n          // Listen for foreground messages\r\n          const unsubscribe = onMessage(messaging, (payload) => {\r\n            console.log('Received foreground message:', payload);\r\n            const newNotification = {\r\n              id: Date.now().toString(),\r\n              title: payload.notification.title,\r\n              message: payload.notification.body,\r\n              type: payload.data?.type || 'DEFAULT',\r\n              data: JSON.parse(payload.data?.extraData || '{}'),\r\n              createdAt: new Date().toISOString(),\r\n              read: false\r\n            };\r\n\r\n            setNotifications(prev => [newNotification, ...prev]);\r\n            setUnreadCount(prev => prev + 1);\r\n          });\r\n\r\n          return () => {\r\n            unsubscribe();\r\n          };\r\n        }\r\n      } catch (error) {\r\n        console.error('Error initializing notifications:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    initializeNotifications();\r\n  }, []);\r\n};\r\n\r\nexport default useFCM;"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,SAASC,SAAS,QAAQ,oBAAoB;AAE9C,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEnBL,SAAS,CAAC,MAAM;IACd,MAAMM,uBAAuB,GAAG,MAAAA,CAAA,KAAY;MAC1C,IAAI;QACFC,UAAU,CAAC,IAAI,CAAC;QAEhB,MAAMC,UAAU,GAAG,MAAMC,YAAY,CAACC,iBAAiB,CAAC,CAAC;QACzD,IAAIF,UAAU,KAAK,SAAS,EAAE;UAC5B;UACA,MAAMG,KAAK,GAAG,MAAMT,QAAQ,CAACC,SAAS,EAAE;YACtCS,QAAQ,EAAEC,OAAO,CAACC,GAAG,CAACC;UACxB,CAAC,CAAC;UAEF,IAAIJ,KAAK,EAAE;YAET,MAAMK,KAAK,CAAC,GAAGH,OAAO,CAACC,GAAG,CAACG,sBAAsB,gCAAgC,EAAE;cACjFC,MAAM,EAAE,MAAM;cACdC,OAAO,EAAE;gBACP,cAAc,EAAE,kBAAkB;gBAClC,eAAe,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;cAC1D,CAAC;cACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;gBAAEC,QAAQ,EAAEd;cAAM,CAAC;YAC1C,CAAC,CAAC;YACFe,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEhB,KAAK,CAAC;UAClC;;UAEA;UACA,MAAMiB,WAAW,GAAGC,SAAS,CAAC1B,SAAS,EAAG2B,OAAO,IAAK;YAAA,IAAAC,aAAA,EAAAC,cAAA;YACpDN,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEG,OAAO,CAAC;YACpD,MAAMG,eAAe,GAAG;cACtBC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;cACzBC,KAAK,EAAER,OAAO,CAACS,YAAY,CAACD,KAAK;cACjCE,OAAO,EAAEV,OAAO,CAACS,YAAY,CAACjB,IAAI;cAClCmB,IAAI,EAAE,EAAAV,aAAA,GAAAD,OAAO,CAACY,IAAI,cAAAX,aAAA,uBAAZA,aAAA,CAAcU,IAAI,KAAI,SAAS;cACrCC,IAAI,EAAEnB,IAAI,CAACoB,KAAK,CAAC,EAAAX,cAAA,GAAAF,OAAO,CAACY,IAAI,cAAAV,cAAA,uBAAZA,cAAA,CAAcY,SAAS,KAAI,IAAI,CAAC;cACjDC,SAAS,EAAE,IAAIV,IAAI,CAAC,CAAC,CAACW,WAAW,CAAC,CAAC;cACnCC,IAAI,EAAE;YACR,CAAC;YAEDC,gBAAgB,CAACC,IAAI,IAAI,CAAChB,eAAe,EAAE,GAAGgB,IAAI,CAAC,CAAC;YACpDC,cAAc,CAACD,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAC;UAClC,CAAC,CAAC;UAEF,OAAO,MAAM;YACXrB,WAAW,CAAC,CAAC;UACf,CAAC;QACH;MACF,CAAC,CAAC,OAAOuB,KAAK,EAAE;QACdzB,OAAO,CAACyB,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;MAC3D,CAAC,SAAS;QACR5C,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDD,uBAAuB,CAAC,CAAC;EAC3B,CAAC,EAAE,EAAE,CAAC;AACR,CAAC;AAACD,EAAA,CAzDID,MAAM;AA2DZ,eAAeA,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}