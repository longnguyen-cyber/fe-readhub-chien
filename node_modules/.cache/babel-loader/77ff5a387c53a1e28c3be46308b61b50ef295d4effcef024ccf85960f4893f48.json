{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TTC\\\\OneDrive\\\\Documents\\\\GITHUB\\\\fe-readhub\\\\src\\\\contexts\\\\BooksProvider.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// contexts/BooksProvider.js\nimport React, { createContext, useContext, useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { BOOKSHELVES } from '../constants/books';\nimport BookshelfSection from '../component/bookshelf/BookshelfSection';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BooksContext = /*#__PURE__*/createContext();\nexport const BooksProvider = ({\n  children\n}) => {\n  _s();\n  const [booksData, setBooksData] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Sử dụng useRef để track API calls\n  const fetchingRef = useRef(false);\n  const initialFetchDoneRef = useRef(false);\n  useEffect(() => {\n    // Function để fetch books\n    const fetchBooks = async () => {\n      if (fetchingRef.current || initialFetchDoneRef.current) return;\n      try {\n        fetchingRef.current = true;\n        setLoading(true);\n        setError(null);\n        console.log('Fetching with shelves:', BOOKSHELVES);\n        const responses = await Promise.all(BOOKSHELVES.map(async shelf => {\n          try {\n            const response = await axios.post('http://localhost:8080/api/v1/book/search/advanced', {\n              subjects: [shelf.topic],\n              bookshelves: null,\n              languages: null,\n              author: null,\n              title: null\n            }, {\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              params: {\n                page: 0,\n                size: 15\n              }\n            });\n            console.log(`Response for ${shelf.topic}:`, response.data);\n            return response;\n          } catch (err) {\n            console.error(`Error fetching ${shelf.topic}:`, err);\n            throw err;\n          }\n        }));\n        const booksMap = {};\n        responses.forEach((response, index) => {\n          const shelf = BOOKSHELVES[index];\n          booksMap[shelf.topic] = response.data.results || [];\n          console.log(`Books for ${shelf.topic}:`, booksMap[shelf.topic]);\n        });\n        setBooksData(booksMap);\n        initialFetchDoneRef.current = true;\n      } catch (error) {\n        console.error('Fetch error:', error);\n        setError(error.message || 'Failed to load books');\n      } finally {\n        setLoading(false);\n        fetchingRef.current = false;\n      }\n    };\n    fetchBooks();\n\n    // Cleanup function\n    return () => {\n      // Reset refs khi component unmount\n      fetchingRef.current = false;\n      initialFetchDoneRef.current = false;\n    };\n  }, []); // Empty deps array để chỉ chạy một lần\n\n  // Function để force refresh data nếu cần\n  const refreshBooks = async () => {\n    initialFetchDoneRef.current = false; // Reset fetch done flag\n    fetchingRef.current = false; // Reset fetching flag\n\n    try {\n      setLoading(true);\n      setError(null);\n      const responses = await Promise.all(BOOKSHELVES.map(async shelf => {\n        try {\n          const response = await axios.post('http://localhost:8080/api/v1/book/search/advanced', {\n            subjects: [shelf.topic],\n            bookshelves: null,\n            languages: null,\n            author: null,\n            title: null\n          }, {\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            params: {\n              page: 0,\n              size: 15\n            }\n          });\n          console.log(`Response for ${shelf.topic}:`, response.data);\n          return response;\n        } catch (err) {\n          console.error(`Error fetching ${shelf.topic}:`, err);\n          throw err;\n        }\n      }));\n      const booksMap = {};\n      responses.forEach((response, index) => {\n        const shelf = BOOKSHELVES[index];\n        booksMap[shelf.topic] = response.data.results || [];\n        console.log(`Books for ${shelf.topic}:`, booksMap[shelf.topic]);\n      });\n      setBooksData(booksMap);\n    } catch (error) {\n      console.error('Error refreshing books:', error);\n      setError('Failed to refresh books');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(BooksContext.Provider, {\n    value: {\n      booksData,\n      loading,\n      error,\n      refreshBooks,\n      bookshelves: BOOKSHELVES\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n};\n_s(BooksProvider, \"2kCg/XWhxDK08bjyOcvVGcWP+iY=\");\n_c = BooksProvider;\nexport const useBooks = () => {\n  _s2();\n  const context = useContext(BooksContext);\n  if (!context) {\n    throw new Error('useBooks must be used within BooksProvider');\n  }\n  return context;\n};\n_s2(useBooks, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"BooksProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useRef","axios","BOOKSHELVES","BookshelfSection","jsxDEV","_jsxDEV","BooksContext","BooksProvider","children","_s","booksData","setBooksData","loading","setLoading","error","setError","fetchingRef","initialFetchDoneRef","fetchBooks","current","console","log","responses","Promise","all","map","shelf","response","post","subjects","topic","bookshelves","languages","author","title","headers","params","page","size","data","err","booksMap","forEach","index","results","message","refreshBooks","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useBooks","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/TTC/OneDrive/Documents/GITHUB/fe-readhub/src/contexts/BooksProvider.js"],"sourcesContent":["// contexts/BooksProvider.js\r\nimport React, {\r\n  createContext,\r\n  useContext,\r\n  useState,\r\n  useEffect,\r\n  useRef,\r\n} from 'react'\r\nimport axios from 'axios'\r\nimport {BOOKSHELVES} from '../constants/books'\r\nimport BookshelfSection from '../component/bookshelf/BookshelfSection'\r\n\r\nconst BooksContext = createContext()\r\n\r\nexport const BooksProvider = ({children}) => {\r\n  const [booksData, setBooksData] = useState({})\r\n  const [loading, setLoading] = useState(true)\r\n  const [error, setError] = useState(null)\r\n\r\n  // Sử dụng useRef để track API calls\r\n  const fetchingRef = useRef(false)\r\n  const initialFetchDoneRef = useRef(false)\r\n\r\n  useEffect(() => {\r\n    // Function để fetch books\r\n    const fetchBooks = async () => {\r\n      if (fetchingRef.current || initialFetchDoneRef.current) return\r\n\r\n      try {\r\n        fetchingRef.current = true\r\n        setLoading(true)\r\n        setError(null)\r\n\r\n        console.log('Fetching with shelves:', BOOKSHELVES)\r\n\r\n        const responses = await Promise.all(\r\n          BOOKSHELVES.map(async shelf => {\r\n            try {\r\n              const response = await axios.post(\r\n                'http://localhost:8080/api/v1/book/search/advanced',\r\n                {\r\n                  subjects: [shelf.topic],\r\n                  bookshelves: null,\r\n                  languages: null,\r\n                  author: null,\r\n                  title: null,\r\n                },\r\n                {\r\n                  headers: {'Content-Type': 'application/json'},\r\n                  params: {page: 0, size: 15},\r\n                },\r\n              )\r\n              console.log(`Response for ${shelf.topic}:`, response.data)\r\n              return response\r\n            } catch (err) {\r\n              console.error(`Error fetching ${shelf.topic}:`, err)\r\n              throw err\r\n            }\r\n          }),\r\n        )\r\n\r\n        const booksMap = {}\r\n        responses.forEach((response, index) => {\r\n          const shelf = BOOKSHELVES[index]\r\n          booksMap[shelf.topic] = response.data.results || []\r\n          console.log(`Books for ${shelf.topic}:`, booksMap[shelf.topic])\r\n        })\r\n\r\n        setBooksData(booksMap)\r\n        initialFetchDoneRef.current = true\r\n      } catch (error) {\r\n        console.error('Fetch error:', error)\r\n        setError(error.message || 'Failed to load books')\r\n      } finally {\r\n        setLoading(false)\r\n        fetchingRef.current = false\r\n      }\r\n    }\r\n\r\n    fetchBooks()\r\n\r\n    // Cleanup function\r\n    return () => {\r\n      // Reset refs khi component unmount\r\n      fetchingRef.current = false\r\n      initialFetchDoneRef.current = false\r\n    }\r\n  }, []) // Empty deps array để chỉ chạy một lần\r\n\r\n  // Function để force refresh data nếu cần\r\n  const refreshBooks = async () => {\r\n    initialFetchDoneRef.current = false // Reset fetch done flag\r\n    fetchingRef.current = false // Reset fetching flag\r\n\r\n    try {\r\n      setLoading(true)\r\n      setError(null)\r\n\r\n      const responses = await Promise.all(\r\n        BOOKSHELVES.map(async shelf => {\r\n          try {\r\n            const response = await axios.post(\r\n              'http://localhost:8080/api/v1/book/search/advanced',\r\n              {\r\n                subjects: [shelf.topic],\r\n                bookshelves: null,\r\n                languages: null,\r\n                author: null,\r\n                title: null,\r\n              },\r\n              {\r\n                headers: {'Content-Type': 'application/json'},\r\n                params: {page: 0, size: 15},\r\n              },\r\n            )\r\n            console.log(`Response for ${shelf.topic}:`, response.data)\r\n            return response\r\n          } catch (err) {\r\n            console.error(`Error fetching ${shelf.topic}:`, err)\r\n            throw err\r\n          }\r\n        }),\r\n      )\r\n\r\n      const booksMap = {}\r\n      responses.forEach((response, index) => {\r\n        const shelf = BOOKSHELVES[index]\r\n        booksMap[shelf.topic] = response.data.results || []\r\n        console.log(`Books for ${shelf.topic}:`, booksMap[shelf.topic])\r\n      })\r\n\r\n      setBooksData(booksMap)\r\n    } catch (error) {\r\n      console.error('Error refreshing books:', error)\r\n      setError('Failed to refresh books')\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <BooksContext.Provider\r\n      value={{\r\n        booksData,\r\n        loading,\r\n        error,\r\n        refreshBooks,\r\n        bookshelves: BOOKSHELVES,\r\n      }}>\r\n      {children}\r\n    </BooksContext.Provider>\r\n  )\r\n}\r\n\r\nexport const useBooks = () => {\r\n  const context = useContext(BooksContext)\r\n  if (!context) {\r\n    throw new Error('useBooks must be used within BooksProvider')\r\n  }\r\n  return context\r\n}\r\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IACVC,aAAa,EACbC,UAAU,EACVC,QAAQ,EACRC,SAAS,EACTC,MAAM,QACD,OAAO;AACd,OAAOC,KAAK,MAAM,OAAO;AACzB,SAAQC,WAAW,QAAO,oBAAoB;AAC9C,OAAOC,gBAAgB,MAAM,yCAAyC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtE,MAAMC,YAAY,gBAAGV,aAAa,CAAC,CAAC;AAEpC,OAAO,MAAMW,aAAa,GAAGA,CAAC;EAACC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAC3C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;;EAExC;EACA,MAAMkB,WAAW,GAAGhB,MAAM,CAAC,KAAK,CAAC;EACjC,MAAMiB,mBAAmB,GAAGjB,MAAM,CAAC,KAAK,CAAC;EAEzCD,SAAS,CAAC,MAAM;IACd;IACA,MAAMmB,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAIF,WAAW,CAACG,OAAO,IAAIF,mBAAmB,CAACE,OAAO,EAAE;MAExD,IAAI;QACFH,WAAW,CAACG,OAAO,GAAG,IAAI;QAC1BN,UAAU,CAAC,IAAI,CAAC;QAChBE,QAAQ,CAAC,IAAI,CAAC;QAEdK,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEnB,WAAW,CAAC;QAElD,MAAMoB,SAAS,GAAG,MAAMC,OAAO,CAACC,GAAG,CACjCtB,WAAW,CAACuB,GAAG,CAAC,MAAMC,KAAK,IAAI;UAC7B,IAAI;YACF,MAAMC,QAAQ,GAAG,MAAM1B,KAAK,CAAC2B,IAAI,CAC/B,mDAAmD,EACnD;cACEC,QAAQ,EAAE,CAACH,KAAK,CAACI,KAAK,CAAC;cACvBC,WAAW,EAAE,IAAI;cACjBC,SAAS,EAAE,IAAI;cACfC,MAAM,EAAE,IAAI;cACZC,KAAK,EAAE;YACT,CAAC,EACD;cACEC,OAAO,EAAE;gBAAC,cAAc,EAAE;cAAkB,CAAC;cAC7CC,MAAM,EAAE;gBAACC,IAAI,EAAE,CAAC;gBAAEC,IAAI,EAAE;cAAE;YAC5B,CACF,CAAC;YACDlB,OAAO,CAACC,GAAG,CAAC,gBAAgBK,KAAK,CAACI,KAAK,GAAG,EAAEH,QAAQ,CAACY,IAAI,CAAC;YAC1D,OAAOZ,QAAQ;UACjB,CAAC,CAAC,OAAOa,GAAG,EAAE;YACZpB,OAAO,CAACN,KAAK,CAAC,kBAAkBY,KAAK,CAACI,KAAK,GAAG,EAAEU,GAAG,CAAC;YACpD,MAAMA,GAAG;UACX;QACF,CAAC,CACH,CAAC;QAED,MAAMC,QAAQ,GAAG,CAAC,CAAC;QACnBnB,SAAS,CAACoB,OAAO,CAAC,CAACf,QAAQ,EAAEgB,KAAK,KAAK;UACrC,MAAMjB,KAAK,GAAGxB,WAAW,CAACyC,KAAK,CAAC;UAChCF,QAAQ,CAACf,KAAK,CAACI,KAAK,CAAC,GAAGH,QAAQ,CAACY,IAAI,CAACK,OAAO,IAAI,EAAE;UACnDxB,OAAO,CAACC,GAAG,CAAC,aAAaK,KAAK,CAACI,KAAK,GAAG,EAAEW,QAAQ,CAACf,KAAK,CAACI,KAAK,CAAC,CAAC;QACjE,CAAC,CAAC;QAEFnB,YAAY,CAAC8B,QAAQ,CAAC;QACtBxB,mBAAmB,CAACE,OAAO,GAAG,IAAI;MACpC,CAAC,CAAC,OAAOL,KAAK,EAAE;QACdM,OAAO,CAACN,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;QACpCC,QAAQ,CAACD,KAAK,CAAC+B,OAAO,IAAI,sBAAsB,CAAC;MACnD,CAAC,SAAS;QACRhC,UAAU,CAAC,KAAK,CAAC;QACjBG,WAAW,CAACG,OAAO,GAAG,KAAK;MAC7B;IACF,CAAC;IAEDD,UAAU,CAAC,CAAC;;IAEZ;IACA,OAAO,MAAM;MACX;MACAF,WAAW,CAACG,OAAO,GAAG,KAAK;MAC3BF,mBAAmB,CAACE,OAAO,GAAG,KAAK;IACrC,CAAC;EACH,CAAC,EAAE,EAAE,CAAC,EAAC;;EAEP;EACA,MAAM2B,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B7B,mBAAmB,CAACE,OAAO,GAAG,KAAK,EAAC;IACpCH,WAAW,CAACG,OAAO,GAAG,KAAK,EAAC;;IAE5B,IAAI;MACFN,UAAU,CAAC,IAAI,CAAC;MAChBE,QAAQ,CAAC,IAAI,CAAC;MAEd,MAAMO,SAAS,GAAG,MAAMC,OAAO,CAACC,GAAG,CACjCtB,WAAW,CAACuB,GAAG,CAAC,MAAMC,KAAK,IAAI;QAC7B,IAAI;UACF,MAAMC,QAAQ,GAAG,MAAM1B,KAAK,CAAC2B,IAAI,CAC/B,mDAAmD,EACnD;YACEC,QAAQ,EAAE,CAACH,KAAK,CAACI,KAAK,CAAC;YACvBC,WAAW,EAAE,IAAI;YACjBC,SAAS,EAAE,IAAI;YACfC,MAAM,EAAE,IAAI;YACZC,KAAK,EAAE;UACT,CAAC,EACD;YACEC,OAAO,EAAE;cAAC,cAAc,EAAE;YAAkB,CAAC;YAC7CC,MAAM,EAAE;cAACC,IAAI,EAAE,CAAC;cAAEC,IAAI,EAAE;YAAE;UAC5B,CACF,CAAC;UACDlB,OAAO,CAACC,GAAG,CAAC,gBAAgBK,KAAK,CAACI,KAAK,GAAG,EAAEH,QAAQ,CAACY,IAAI,CAAC;UAC1D,OAAOZ,QAAQ;QACjB,CAAC,CAAC,OAAOa,GAAG,EAAE;UACZpB,OAAO,CAACN,KAAK,CAAC,kBAAkBY,KAAK,CAACI,KAAK,GAAG,EAAEU,GAAG,CAAC;UACpD,MAAMA,GAAG;QACX;MACF,CAAC,CACH,CAAC;MAED,MAAMC,QAAQ,GAAG,CAAC,CAAC;MACnBnB,SAAS,CAACoB,OAAO,CAAC,CAACf,QAAQ,EAAEgB,KAAK,KAAK;QACrC,MAAMjB,KAAK,GAAGxB,WAAW,CAACyC,KAAK,CAAC;QAChCF,QAAQ,CAACf,KAAK,CAACI,KAAK,CAAC,GAAGH,QAAQ,CAACY,IAAI,CAACK,OAAO,IAAI,EAAE;QACnDxB,OAAO,CAACC,GAAG,CAAC,aAAaK,KAAK,CAACI,KAAK,GAAG,EAAEW,QAAQ,CAACf,KAAK,CAACI,KAAK,CAAC,CAAC;MACjE,CAAC,CAAC;MAEFnB,YAAY,CAAC8B,QAAQ,CAAC;IACxB,CAAC,CAAC,OAAO3B,KAAK,EAAE;MACdM,OAAO,CAACN,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/CC,QAAQ,CAAC,yBAAyB,CAAC;IACrC,CAAC,SAAS;MACRF,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACER,OAAA,CAACC,YAAY,CAACyC,QAAQ;IACpBC,KAAK,EAAE;MACLtC,SAAS;MACTE,OAAO;MACPE,KAAK;MACLgC,YAAY;MACZf,WAAW,EAAE7B;IACf,CAAE;IAAAM,QAAA,EACDA;EAAQ;IAAAyC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAAA3C,EAAA,CA1IYF,aAAa;AAAA8C,EAAA,GAAb9C,aAAa;AA4I1B,OAAO,MAAM+C,QAAQ,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC5B,MAAMC,OAAO,GAAG3D,UAAU,CAACS,YAAY,CAAC;EACxC,IAAI,CAACkD,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,4CAA4C,CAAC;EAC/D;EACA,OAAOD,OAAO;AAChB,CAAC;AAAAD,GAAA,CANYD,QAAQ;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}