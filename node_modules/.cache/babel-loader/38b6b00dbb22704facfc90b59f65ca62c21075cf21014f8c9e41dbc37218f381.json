{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TTC\\\\OneDrive\\\\Documents\\\\GITHUB\\\\fe-readhub\\\\src\\\\component\\\\header\\\\SearchComponent.js\",\n  _s = $RefreshSig$();\n// SearchComponent.jsx\nimport React, { useState, useRef, useCallback } from 'react';\nimport { Search, X } from 'lucide-react';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchComponent = ({\n  onSearchChange,\n  initialSearchTerm = ''\n}) => {\n  _s();\n  // Local state to handle immediate input changes\n  const [localSearchTerm, setLocalSearchTerm] = useState(initialSearchTerm);\n  const inputRef = useRef(null);\n\n  // A single useEffect that handles both search updates and focus management\n  useEffect(() => {\n    // Update the parent with the search term\n    onSearchChange === null || onSearchChange === void 0 ? void 0 : onSearchChange(localSearchTerm);\n    // Immediately restore focus after the update\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n\n    // Clean up the timer on component updates or unmount\n  }, [localSearchTerm, onSearchChange]);\n\n  // Simple handlers that don't include debouncing logic\n  const handleChange = e => {\n    setLocalSearchTerm(e.target.value);\n  };\n  const clearSearch = () => {\n    var _inputRef$current;\n    setLocalSearchTerm('');\n    onSearchChange === null || onSearchChange === void 0 ? void 0 : onSearchChange('');\n    (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.focus();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative\",\n    children: [/*#__PURE__*/_jsxDEV(Search, {\n      className: \"absolute left-3 top-1/2 -translate-y-1/2 text-gray-400 h-5 w-5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: inputRef,\n      type: \"text\",\n      placeholder: \"Search books, authors, or keywords...\",\n      value: localSearchTerm,\n      onChange: handleChange,\n      className: \"w-full pl-10 pr-10 py-2 border border-gray-300 rounded-full bg-gray-50 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), localSearchTerm && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: clearSearch,\n      className: \"absolute right-3 top-1/2 -translate-y-1/2 text-gray-400 hover:text-gray-600\",\n      children: /*#__PURE__*/_jsxDEV(X, {\n        className: \"h-5 w-5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchComponent, \"TDtpO5/7gIiHk3pBdZYszy4qoHQ=\");\n_c = SearchComponent;\nexport default _c2 = /*#__PURE__*/React.memo(SearchComponent);\nvar _c, _c2;\n$RefreshReg$(_c, \"SearchComponent\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useState","useRef","useCallback","Search","X","useEffect","jsxDEV","_jsxDEV","SearchComponent","onSearchChange","initialSearchTerm","_s","localSearchTerm","setLocalSearchTerm","inputRef","current","focus","handleChange","e","target","value","clearSearch","_inputRef$current","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","type","placeholder","onChange","onClick","_c","_c2","memo","$RefreshReg$"],"sources":["C:/Users/TTC/OneDrive/Documents/GITHUB/fe-readhub/src/component/header/SearchComponent.js"],"sourcesContent":["// SearchComponent.jsx\r\nimport React, {useState, useRef, useCallback} from 'react'\r\nimport {Search, X} from 'lucide-react'\r\nimport {useEffect} from 'react'\r\n\r\nconst SearchComponent = ({onSearchChange, initialSearchTerm = ''}) => {\r\n  // Local state to handle immediate input changes\r\n  const [localSearchTerm, setLocalSearchTerm] = useState(initialSearchTerm)\r\n  const inputRef = useRef(null)\r\n\r\n  // A single useEffect that handles both search updates and focus management\r\n  useEffect(() => {\r\n    // Update the parent with the search term\r\n    onSearchChange?.(localSearchTerm)\r\n    // Immediately restore focus after the update\r\n    if (inputRef.current) {\r\n      inputRef.current.focus()\r\n    }\r\n\r\n    // Clean up the timer on component updates or unmount\r\n  }, [localSearchTerm, onSearchChange])\r\n\r\n  // Simple handlers that don't include debouncing logic\r\n  const handleChange = e => {\r\n    setLocalSearchTerm(e.target.value)\r\n  }\r\n\r\n  const clearSearch = () => {\r\n    setLocalSearchTerm('')\r\n    onSearchChange?.('')\r\n    inputRef.current?.focus()\r\n  }\r\n\r\n  return (\r\n    <div className='relative'>\r\n      <Search className='absolute left-3 top-1/2 -translate-y-1/2 text-gray-400 h-5 w-5' />\r\n      <input\r\n        ref={inputRef}\r\n        type='text'\r\n        placeholder='Search books, authors, or keywords...'\r\n        value={localSearchTerm}\r\n        onChange={handleChange}\r\n        className='w-full pl-10 pr-10 py-2 border border-gray-300 rounded-full bg-gray-50 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent'\r\n      />\r\n      {localSearchTerm && (\r\n        <button\r\n          onClick={clearSearch}\r\n          className='absolute right-3 top-1/2 -translate-y-1/2 text-gray-400 hover:text-gray-600'>\r\n          <X className='h-5 w-5' />\r\n        </button>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default React.memo(SearchComponent)\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,MAAM,EAAEC,WAAW,QAAO,OAAO;AAC1D,SAAQC,MAAM,EAAEC,CAAC,QAAO,cAAc;AACtC,SAAQC,SAAS,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,eAAe,GAAGA,CAAC;EAACC,cAAc;EAAEC,iBAAiB,GAAG;AAAE,CAAC,KAAK;EAAAC,EAAA;EACpE;EACA,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGb,QAAQ,CAACU,iBAAiB,CAAC;EACzE,MAAMI,QAAQ,GAAGb,MAAM,CAAC,IAAI,CAAC;;EAE7B;EACAI,SAAS,CAAC,MAAM;IACd;IACAI,cAAc,aAAdA,cAAc,uBAAdA,cAAc,CAAGG,eAAe,CAAC;IACjC;IACA,IAAIE,QAAQ,CAACC,OAAO,EAAE;MACpBD,QAAQ,CAACC,OAAO,CAACC,KAAK,CAAC,CAAC;IAC1B;;IAEA;EACF,CAAC,EAAE,CAACJ,eAAe,EAAEH,cAAc,CAAC,CAAC;;EAErC;EACA,MAAMQ,YAAY,GAAGC,CAAC,IAAI;IACxBL,kBAAkB,CAACK,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACpC,CAAC;EAED,MAAMC,WAAW,GAAGA,CAAA,KAAM;IAAA,IAAAC,iBAAA;IACxBT,kBAAkB,CAAC,EAAE,CAAC;IACtBJ,cAAc,aAAdA,cAAc,uBAAdA,cAAc,CAAG,EAAE,CAAC;IACpB,CAAAa,iBAAA,GAAAR,QAAQ,CAACC,OAAO,cAAAO,iBAAA,uBAAhBA,iBAAA,CAAkBN,KAAK,CAAC,CAAC;EAC3B,CAAC;EAED,oBACET,OAAA;IAAKgB,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACvBjB,OAAA,CAACJ,MAAM;MAACoB,SAAS,EAAC;IAAgE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACrFrB,OAAA;MACEsB,GAAG,EAAEf,QAAS;MACdgB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,uCAAuC;MACnDX,KAAK,EAAER,eAAgB;MACvBoB,QAAQ,EAAEf,YAAa;MACvBM,SAAS,EAAC;IAAqJ;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChK,CAAC,EACDhB,eAAe,iBACdL,OAAA;MACE0B,OAAO,EAAEZ,WAAY;MACrBE,SAAS,EAAC,6EAA6E;MAAAC,QAAA,eACvFjB,OAAA,CAACH,CAAC;QAACmB,SAAS,EAAC;MAAS;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB,CACT;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAAjB,EAAA,CAhDKH,eAAe;AAAA0B,EAAA,GAAf1B,eAAe;AAkDrB,eAAA2B,GAAA,gBAAepC,KAAK,CAACqC,IAAI,CAAC5B,eAAe,CAAC;AAAA,IAAA0B,EAAA,EAAAC,GAAA;AAAAE,YAAA,CAAAH,EAAA;AAAAG,YAAA,CAAAF,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}