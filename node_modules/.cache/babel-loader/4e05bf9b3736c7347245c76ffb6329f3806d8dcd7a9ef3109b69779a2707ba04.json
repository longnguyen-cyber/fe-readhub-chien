{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { getToken } from 'firebase/messaging';\nimport { messaging } from '../config/firebase';\nconst useFCM = () => {\n  _s();\n  useEffect(() => {\n    const initializeNotifications = async () => {\n      try {\n        const permission = await Notification.requestPermission();\n        if (permission === 'granted') {\n          // Get FCM token\n          const token = await getToken(messaging, {\n            vapidKey: process.env.REACT_APP_FIREBASE_VAPID_KEY\n          });\n          if (token) {\n            await fetch(`${process.env.REACT_APP_API_BASE_URL}/notifications/register-device`, {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\n              },\n              body: JSON.stringify({\n                fcmToken: token\n              })\n            });\n            console.log('FCM token:', token);\n          }\n        }\n      } catch (error) {\n        console.error('Error initializing notifications:', error);\n      } finally {}\n    };\n    initializeNotifications();\n  }, []);\n};\n_s(useFCM, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\nexport default useFCM;","map":{"version":3,"names":["useEffect","useState","getToken","messaging","useFCM","_s","initializeNotifications","permission","Notification","requestPermission","token","vapidKey","process","env","REACT_APP_FIREBASE_VAPID_KEY","fetch","REACT_APP_API_BASE_URL","method","headers","localStorage","getItem","body","JSON","stringify","fcmToken","console","log","error"],"sources":["C:/Users/TTC/OneDrive/Documents/GITHUB/fe-readhub/src/hooks/useFCM.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { getToken } from 'firebase/messaging';\r\nimport { messaging } from '../config/firebase';\r\n\r\nconst useFCM = () => {\r\n\r\n  useEffect(() => {\r\n    const initializeNotifications = async () => {\r\n      try {\r\n\r\n        const permission = await Notification.requestPermission();\r\n        if (permission === 'granted') {\r\n          // Get FCM token\r\n          const token = await getToken(messaging, {\r\n            vapidKey: process.env.REACT_APP_FIREBASE_VAPID_KEY\r\n          });\r\n\r\n          if (token) {\r\n\r\n            await fetch(`${process.env.REACT_APP_API_BASE_URL}/notifications/register-device`, {\r\n              method: 'POST',\r\n              headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n              },\r\n              body: JSON.stringify({ fcmToken: token })\r\n            });\r\n            console.log('FCM token:', token);\r\n          }\r\n\r\n\r\n\r\n        }\r\n      } catch (error) {\r\n        console.error('Error initializing notifications:', error);\r\n      } finally {\r\n      }\r\n    };\r\n\r\n    initializeNotifications();\r\n  }, []);\r\n};\r\n\r\nexport default useFCM;"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,SAASC,SAAS,QAAQ,oBAAoB;AAE9C,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEnBL,SAAS,CAAC,MAAM;IACd,MAAMM,uBAAuB,GAAG,MAAAA,CAAA,KAAY;MAC1C,IAAI;QAEF,MAAMC,UAAU,GAAG,MAAMC,YAAY,CAACC,iBAAiB,CAAC,CAAC;QACzD,IAAIF,UAAU,KAAK,SAAS,EAAE;UAC5B;UACA,MAAMG,KAAK,GAAG,MAAMR,QAAQ,CAACC,SAAS,EAAE;YACtCQ,QAAQ,EAAEC,OAAO,CAACC,GAAG,CAACC;UACxB,CAAC,CAAC;UAEF,IAAIJ,KAAK,EAAE;YAET,MAAMK,KAAK,CAAC,GAAGH,OAAO,CAACC,GAAG,CAACG,sBAAsB,gCAAgC,EAAE;cACjFC,MAAM,EAAE,MAAM;cACdC,OAAO,EAAE;gBACP,cAAc,EAAE,kBAAkB;gBAClC,eAAe,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;cAC1D,CAAC;cACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;gBAAEC,QAAQ,EAAEd;cAAM,CAAC;YAC1C,CAAC,CAAC;YACFe,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEhB,KAAK,CAAC;UAClC;QAIF;MACF,CAAC,CAAC,OAAOiB,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;MAC3D,CAAC,SAAS,CACV;IACF,CAAC;IAEDrB,uBAAuB,CAAC,CAAC;EAC3B,CAAC,EAAE,EAAE,CAAC;AACR,CAAC;AAACD,EAAA,CArCID,MAAM;AAuCZ,eAAeA,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}