{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TTC\\\\OneDrive\\\\Documents\\\\GITHUB\\\\fe-readhub\\\\src\\\\pages\\\\read_book\\\\views\\\\ExpandableText.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Typography, Button } from '@mui/material';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ExpandableText = ({\n  text,\n  maxLength = 400\n}) => {\n  _s();\n  const [isExpanded, setIsExpanded] = useState(false);\n  if (text.length <= maxLength) {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body2\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body2\",\n      children: isExpanded ? text : `${text.slice(0, maxLength)}...`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      size: \"small\",\n      onClick: () => setIsExpanded(!isExpanded),\n      style: {\n        padding: '0',\n        minWidth: 'auto',\n        textTransform: 'none'\n      },\n      children: isExpanded ? 'See less' : 'See more'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(ExpandableText, \"FPNvbbHVlWWR4LKxxNntSxiIS38=\");\n_c = ExpandableText;\nexport default ExpandableText;\nvar _c;\n$RefreshReg$(_c, \"ExpandableText\");","map":{"version":3,"names":["React","useState","Typography","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","ExpandableText","text","maxLength","_s","isExpanded","setIsExpanded","length","variant","children","fileName","_jsxFileName","lineNumber","columnNumber","slice","size","onClick","style","padding","minWidth","textTransform","_c","$RefreshReg$"],"sources":["C:/Users/TTC/OneDrive/Documents/GITHUB/fe-readhub/src/pages/read_book/views/ExpandableText.js"],"sourcesContent":["import React, {useState} from 'react'\r\nimport {Typography, Button} from '@mui/material'\r\n\r\nconst ExpandableText = ({text, maxLength = 400}) => {\r\n  const [isExpanded, setIsExpanded] = useState(false)\r\n\r\n  if (text.length <= maxLength) {\r\n    return <Typography variant='body2'>{text}</Typography>\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Typography variant='body2'>\r\n        {isExpanded ? text : `${text.slice(0, maxLength)}...`}\r\n      </Typography>\r\n      <Button\r\n        size='small'\r\n        onClick={() => setIsExpanded(!isExpanded)}\r\n        style={{padding: '0', minWidth: 'auto', textTransform: 'none'}}>\r\n        {isExpanded ? 'See less' : 'See more'}\r\n      </Button>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ExpandableText\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,SAAQC,UAAU,EAAEC,MAAM,QAAO,eAAe;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEhD,MAAMC,cAAc,GAAGA,CAAC;EAACC,IAAI;EAAEC,SAAS,GAAG;AAAG,CAAC,KAAK;EAAAC,EAAA;EAClD,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAEnD,IAAIQ,IAAI,CAACK,MAAM,IAAIJ,SAAS,EAAE;IAC5B,oBAAOL,OAAA,CAACH,UAAU;MAACa,OAAO,EAAC,OAAO;MAAAC,QAAA,EAAEP;IAAI;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa,CAAC;EACxD;EAEA,oBACEf,OAAA,CAAAE,SAAA;IAAAS,QAAA,gBACEX,OAAA,CAACH,UAAU;MAACa,OAAO,EAAC,OAAO;MAAAC,QAAA,EACxBJ,UAAU,GAAGH,IAAI,GAAG,GAAGA,IAAI,CAACY,KAAK,CAAC,CAAC,EAAEX,SAAS,CAAC;IAAK;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,eACbf,OAAA,CAACF,MAAM;MACLmB,IAAI,EAAC,OAAO;MACZC,OAAO,EAAEA,CAAA,KAAMV,aAAa,CAAC,CAACD,UAAU,CAAE;MAC1CY,KAAK,EAAE;QAACC,OAAO,EAAE,GAAG;QAAEC,QAAQ,EAAE,MAAM;QAAEC,aAAa,EAAE;MAAM,CAAE;MAAAX,QAAA,EAC9DJ,UAAU,GAAG,UAAU,GAAG;IAAU;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC;EAAA,eACT,CAAC;AAEP,CAAC;AAAAT,EAAA,CApBKH,cAAc;AAAAoB,EAAA,GAAdpB,cAAc;AAsBpB,eAAeA,cAAc;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}