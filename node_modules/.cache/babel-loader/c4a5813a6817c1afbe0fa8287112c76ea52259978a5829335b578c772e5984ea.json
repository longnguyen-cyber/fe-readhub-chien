{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TTC\\\\OneDrive\\\\Documents\\\\GITHUB\\\\fe-readhub\\\\src\\\\contexts\\\\BooksProvider.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// contexts/BooksProvider.js\nimport React, { createContext, useContext, useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { BOOKSHELVES } from '../constants/books';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BooksContext = /*#__PURE__*/createContext();\nexport const BooksProvider = ({\n  children\n}) => {\n  _s();\n  const [booksData, setBooksData] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Sử dụng useRef để track API calls\n  const fetchingRef = useRef(false);\n  const initialFetchDoneRef = useRef(false);\n  useEffect(() => {\n    // Function để fetch books\n    const fetchBooks = async () => {\n      // Check nếu đang fetch hoặc đã fetch xong\n      if (fetchingRef.current || initialFetchDoneRef.current) {\n        return;\n      }\n      try {\n        fetchingRef.current = true; // Đánh dấu đang fetch\n        setLoading(true);\n        setError(null);\n        const responses = await Promise.all(BOOKSHELVES.map(shelf => axios.get(`https://gutendex.com/books?topic=${shelf.topic}&page=1&sort=popular `)));\n        const booksMap = {};\n        BOOKSHELVES.forEach((shelf, index) => {\n          booksMap[shelf.topic] = responses[index].data.results.slice(0, 20);\n        });\n        setBooksData(booksMap);\n        initialFetchDoneRef.current = true; // Đánh dấu đã fetch xong\n      } catch (error) {\n        setError('Failed to load books');\n      } finally {\n        setLoading(false);\n        fetchingRef.current = false; // Reset fetch flag\n      }\n    };\n    fetchBooks();\n\n    // Cleanup function\n    return () => {\n      // Reset refs khi component unmount\n      fetchingRef.current = false;\n      initialFetchDoneRef.current = false;\n    };\n  }, []); // Empty deps array để chỉ chạy một lần\n\n  // Function để force refresh data nếu cần\n  const refreshBooks = async () => {\n    initialFetchDoneRef.current = false; // Reset fetch done flag\n    fetchingRef.current = false; // Reset fetching flag\n\n    try {\n      setLoading(true);\n      setError(null);\n      const responses = await Promise.all(BOOKSHELVES.map(shelf => axios.get(`https://gutendex.com/books?topic=${shelf.topic}&page=1`)));\n      const booksMap = {};\n      BOOKSHELVES.forEach((shelf, index) => {\n        booksMap[shelf.topic] = responses[index].data.results.slice(0, 10);\n      });\n      setBooksData(booksMap);\n    } catch (error) {\n      console.error('Error refreshing books:', error);\n      setError('Failed to refresh books');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(BooksContext.Provider, {\n    value: {\n      booksData,\n      loading,\n      error,\n      refreshBooks,\n      bookshelves: BOOKSHELVES\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_s(BooksProvider, \"2kCg/XWhxDK08bjyOcvVGcWP+iY=\");\n_c = BooksProvider;\nexport const useBooks = () => {\n  _s2();\n  const context = useContext(BooksContext);\n  if (!context) {\n    throw new Error('useBooks must be used within BooksProvider');\n  }\n  return context;\n};\n_s2(useBooks, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"BooksProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useRef","axios","BOOKSHELVES","jsxDEV","_jsxDEV","BooksContext","BooksProvider","children","_s","booksData","setBooksData","loading","setLoading","error","setError","fetchingRef","initialFetchDoneRef","fetchBooks","current","responses","Promise","all","map","shelf","get","topic","booksMap","forEach","index","data","results","slice","refreshBooks","console","Provider","value","bookshelves","fileName","_jsxFileName","lineNumber","columnNumber","_c","useBooks","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/TTC/OneDrive/Documents/GITHUB/fe-readhub/src/contexts/BooksProvider.js"],"sourcesContent":["// contexts/BooksProvider.js\r\nimport React, {\r\n  createContext,\r\n  useContext,\r\n  useState,\r\n  useEffect,\r\n  useRef,\r\n} from 'react'\r\nimport axios from 'axios'\r\nimport {BOOKSHELVES} from '../constants/books'\r\n\r\nconst BooksContext = createContext()\r\n\r\nexport const BooksProvider = ({children}) => {\r\n  const [booksData, setBooksData] = useState({})\r\n  const [loading, setLoading] = useState(true)\r\n  const [error, setError] = useState(null)\r\n\r\n  // Sử dụng useRef để track API calls\r\n  const fetchingRef = useRef(false)\r\n  const initialFetchDoneRef = useRef(false)\r\n\r\n  useEffect(() => {\r\n    // Function để fetch books\r\n    const fetchBooks = async () => {\r\n      // Check nếu đang fetch hoặc đã fetch xong\r\n      if (fetchingRef.current || initialFetchDoneRef.current) {\r\n        return\r\n      }\r\n\r\n      try {\r\n        fetchingRef.current = true // Đánh dấu đang fetch\r\n        setLoading(true)\r\n        setError(null)\r\n\r\n        const responses = await Promise.all(\r\n          BOOKSHELVES.map(shelf =>\r\n            axios.get(\r\n              `https://gutendex.com/books?topic=${shelf.topic}&page=1&sort=popular `,\r\n            ),\r\n          ),\r\n        )\r\n\r\n        const booksMap = {}\r\n        BOOKSHELVES.forEach((shelf, index) => {\r\n          booksMap[shelf.topic] = responses[index].data.results.slice(0, 20)\r\n        })\r\n\r\n        setBooksData(booksMap)\r\n        initialFetchDoneRef.current = true // Đánh dấu đã fetch xong\r\n      } catch (error) {\r\n        setError('Failed to load books')\r\n      } finally {\r\n        setLoading(false)\r\n        fetchingRef.current = false // Reset fetch flag\r\n      }\r\n    }\r\n\r\n    fetchBooks()\r\n\r\n    // Cleanup function\r\n    return () => {\r\n      // Reset refs khi component unmount\r\n      fetchingRef.current = false\r\n      initialFetchDoneRef.current = false\r\n    }\r\n  }, []) // Empty deps array để chỉ chạy một lần\r\n\r\n  // Function để force refresh data nếu cần\r\n  const refreshBooks = async () => {\r\n    initialFetchDoneRef.current = false // Reset fetch done flag\r\n    fetchingRef.current = false // Reset fetching flag\r\n\r\n    try {\r\n      setLoading(true)\r\n      setError(null)\r\n\r\n      const responses = await Promise.all(\r\n        BOOKSHELVES.map(shelf =>\r\n          axios.get(`https://gutendex.com/books?topic=${shelf.topic}&page=1`),\r\n        ),\r\n      )\r\n\r\n      const booksMap = {}\r\n      BOOKSHELVES.forEach((shelf, index) => {\r\n        booksMap[shelf.topic] = responses[index].data.results.slice(0, 10)\r\n      })\r\n\r\n      setBooksData(booksMap)\r\n    } catch (error) {\r\n      console.error('Error refreshing books:', error)\r\n      setError('Failed to refresh books')\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <BooksContext.Provider\r\n      value={{\r\n        booksData,\r\n        loading,\r\n        error,\r\n        refreshBooks,\r\n        bookshelves: BOOKSHELVES,\r\n      }}>\r\n      {children}\r\n    </BooksContext.Provider>\r\n  )\r\n}\r\n\r\nexport const useBooks = () => {\r\n  const context = useContext(BooksContext)\r\n  if (!context) {\r\n    throw new Error('useBooks must be used within BooksProvider')\r\n  }\r\n  return context\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}