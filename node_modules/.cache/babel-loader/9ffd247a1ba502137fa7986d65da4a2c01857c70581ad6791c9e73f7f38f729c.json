{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TTC\\\\OneDrive\\\\Documents\\\\GITHUB\\\\fe-readhub\\\\src\\\\pages\\\\read_book\\\\views\\\\Note.js\",\n  _s = $RefreshSig$();\n// src/components/Note.js\nimport React, { useState, useRef } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Note({\n  onSave\n}) {\n  _s();\n  const [showNoteBox, setShowNoteBox] = useState(false);\n  const [note, setNote] = useState('');\n  const [selectedText, setSelectedText] = useState('');\n  const noteBoxRef = useRef(null);\n  const handleTextSelection = () => {\n    const selection = window.getSelection();\n    const text = selection.toString();\n    if (text) {\n      setSelectedText(text);\n      setShowNoteBox(true);\n      const {\n        top,\n        left\n      } = window.getSelection().getRangeAt(0).getBoundingClientRect();\n      noteBoxRef.current.style.top = `${top + window.scrollY}px`;\n      noteBoxRef.current.style.left = `${left + window.scrollX}px`;\n    }\n  };\n  const handleSaveNote = () => {\n    if (selectedText && note) {\n      onSave({\n        text: selectedText,\n        note\n      });\n      setShowNoteBox(false);\n      setNote('');\n      setSelectedText('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onMouseUp: handleTextSelection,\n      style: {\n        cursor: 'pointer',\n        position: 'relative'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), showNoteBox && /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: noteBoxRef,\n      style: {\n        position: 'absolute',\n        border: '1px solid #ddd',\n        padding: '10px',\n        backgroundColor: '#fff',\n        boxShadow: '0px 0px 10px rgba(0, 0, 0, 0.1)'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        rows: \"4\",\n        cols: \"30\",\n        value: note,\n        onChange: e => setNote(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSaveNote,\n        children: \"Save Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowNoteBox(false),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(Note, \"3SiJnWpdVlP5npylmU07lKs10Dk=\");\n_c = Note;\nexport default Note;\nvar _c;\n$RefreshReg$(_c, \"Note\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","Note","onSave","_s","showNoteBox","setShowNoteBox","note","setNote","selectedText","setSelectedText","noteBoxRef","handleTextSelection","selection","window","getSelection","text","toString","top","left","getRangeAt","getBoundingClientRect","current","style","scrollY","scrollX","handleSaveNote","children","onMouseUp","cursor","position","fileName","_jsxFileName","lineNumber","columnNumber","ref","border","padding","backgroundColor","boxShadow","rows","cols","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/TTC/OneDrive/Documents/GITHUB/fe-readhub/src/pages/read_book/views/Note.js"],"sourcesContent":["// src/components/Note.js\r\nimport React, { useState, useRef } from 'react';\r\n\r\nfunction Note({ onSave }) {\r\n  const [showNoteBox, setShowNoteBox] = useState(false);\r\n  const [note, setNote] = useState('');\r\n  const [selectedText, setSelectedText] = useState('');\r\n  const noteBoxRef = useRef(null);\r\n\r\n  const handleTextSelection = () => {\r\n    const selection = window.getSelection();\r\n    const text = selection.toString();\r\n    if (text) {\r\n      setSelectedText(text);\r\n      setShowNoteBox(true);\r\n      const { top, left } = window.getSelection().getRangeAt(0).getBoundingClientRect();\r\n      noteBoxRef.current.style.top = `${top + window.scrollY}px`;\r\n      noteBoxRef.current.style.left = `${left + window.scrollX}px`;\r\n    }\r\n  };\r\n\r\n  const handleSaveNote = () => {\r\n    if (selectedText && note) {\r\n      onSave({ text: selectedText, note });\r\n      setShowNoteBox(false);\r\n      setNote('');\r\n      setSelectedText('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        onMouseUp={handleTextSelection}\r\n        style={{ cursor: 'pointer', position: 'relative' }}\r\n      >\r\n        {/* Content Area where user can select text */}\r\n      </div>\r\n\r\n      {showNoteBox && (\r\n        <div\r\n          ref={noteBoxRef}\r\n          style={{\r\n            position: 'absolute',\r\n            border: '1px solid #ddd',\r\n            padding: '10px',\r\n            backgroundColor: '#fff',\r\n            boxShadow: '0px 0px 10px rgba(0, 0, 0, 0.1)',\r\n          }}\r\n        >\r\n          <textarea\r\n            rows=\"4\"\r\n            cols=\"30\"\r\n            value={note}\r\n            onChange={(e) => setNote(e.target.value)}\r\n          />\r\n          <br />\r\n          <button onClick={handleSaveNote}>Save Note</button>\r\n          <button onClick={() => setShowNoteBox(false)}>Cancel</button>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Note;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}